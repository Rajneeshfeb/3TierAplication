AWSTemplateFormatVersion: '2010-09-09'
Description: 3 tier web aplication
Parameter:
  VPC:
    Type: AWS::EC2::VPC::Id
    Default: {{ vpc }}
  subnet0:
    Type: AWS::EC2::Subnet::Id
    Default: {{sunet0}}
  ServiceName:
    Type: String
    Default: {{ service_name }}
  WebPort:
    Type: Number
    Default: {{ web_port}}
  DbPort:
    Type: Number
    Default: {{db_port}}
  LbPort:
    Type: Number
    Default: {{lb_port}}
  KeyName:
    Type: String
    Default: {{ ec2_key }}
  InstanceType:
    Type: String
    Default: {{ instace_type }}
  LatestAmiId:
    Type: String
    Default: {{ ami_id}}

Resources:
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort:
            Ref: WebPort
          ToPort:
            Ref: WebPort

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort:
            Ref: DbPort
          ToPort:
            Ref: DbPort

  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort:
            Ref: LbPort
          ToPort:
            Ref: LbPort
          CidrIp: 0.0.0.0/0
  
  WebInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType'
      SecurityGroups: [!Ref 'WebSecurityGroup']
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'LatestAmiId'
    
  DBInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType'
      SecurityGroups: [!Ref 'DBSecurityGroup']
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'LatestAmiId'
  
  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones: !GetAZs ''
      CrossZone: 'true'
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
      
 
